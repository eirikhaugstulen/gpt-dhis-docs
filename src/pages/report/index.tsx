import {useState} from "react";
import Head from "next/head";
import axios from 'axios';
import { TopBar } from "@/components/Common/TopBar";
import { useQuery } from "@tanstack/react-query";
import {DocumentChartBarIcon, StopIcon} from "@heroicons/react/24/outline";
import { mdxComponents } from "@/components/UI/mdxComponents/mdxComponents";
import { SelectField } from "@/components/UI/SelectField";
import remarkGfm from "remark-gfm";
import ReactMarkdown from "react-markdown";
import { PrimaryButton } from "@/components/UI/Buttons/PrimaryButton";
import {useCompletion} from "ai/react";

type Visualization = {
    id: string;
    displayName: string;
    disabled?: boolean;
};

const defaultVisualization: Visualization = {
    id: 'default',
    displayName: 'Choose a visualization',
    disabled: true,
};

export default function Report() {
    const [selectedVisualization, setSelectedVisualization] = useState<Visualization>(defaultVisualization);

    const { input, handleInputChange, handleSubmit, completion, stop, isLoading } = useCompletion({
        api: '/api/generate-report',
    })

    const { data: visualizations } = useQuery({
        queryKey: ['visualizations'],
        queryFn: () => axios.get('http://localhost:3000/api/visualizations'),
        select: (response): Visualization[] => [defaultVisualization, ...response.data],
    });

    return (
        <>
            <Head>
                <title>GPT - DHIS2 Reports</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div>
                <TopBar title="DHIS2 Reports" />

                <form
                    onSubmit={handleSubmit}
                    className="relative mt-16 transition-all justify-around gap-16 flex flex-col rounded-lg mx-auto px-6 py-10 shadow-2xl max-w-7xl z-10"
                >
                    <div className="flex flex-col w-1/3 mx-auto gap-5">
                        <SelectField
                            options={visualizations || []}
                            value={selectedVisualization}
                            onChange={setSelectedVisualization}
                        />

                        <textarea
                            value={input}
                            onChange={handleInputChange}
                            placeholder={'Enter a custom prompt'}
                            className="rounded-lg border-2 border-gray-300 text-sm p-2 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:border-transparent"
                        />

                        <div className="w-1/3 flex justify-center mx-auto">
                            <PrimaryButton
                                type="submit"
                                label={'Generate Report'}
                                isSubmitting={isLoading}
                            />
                        </div>
                    </div>

                    <div className="px-4 w-2/3 mx-auto flex mt-3 flex-col gap-5 rounded-lg">
                        {completion ? (
                            <div className="text-sm">
                                <ReactMarkdown
                                    components={mdxComponents}
                                    // eslint-disable-next-line react/no-children-prop
                                    children={completion}
                                    remarkPlugins={[remarkGfm]}
                                />

                                {isLoading && (
                                    <button
                                        className={'fixed flex gap-2 text-gray-700 rounded shadow items-center px-2 py-3 right-10 bottom-10 bg-gray-50 border hover:bg-gray-100'}
                                        type={'button'}
                                        onClick={stop}
                                    >
                                        <StopIcon className={'h-5 w-5'}/>
                                        Stop generating
                                    </button>
                                )}
                            </div>
                        ) : (
                            <div className="border-2 border-dashed rounded-lg border-gray-300">
                                <div className="my-8 flex flex-col gap-2">
                                    <DocumentChartBarIcon className="h-7 w-7 mx-auto text-gray-400" />
                                    <h1 className="text-center text-gray-400">Generate report above</h1>
                                </div>
                            </div>
                        )}
                    </div>
                </form>
            </div>
        </>
    );
}
